from asyncio.windows_events import NULL
import redis
import logging
import datetime

from config import *
from functions import BD

from vkbottle.bot import Bot, Message
from vkbottle import Keyboard, Text

bot = Bot(token=TOKEN)

date_str = datetime.datetime.now().strftime('%m-%d-%y_%H_%M')
logger = logging.basicConfig(filename=f"logs\\{date_str}_log.log", level=logging.INFO)

cash = {}

# for admin in ADMINS:
#     cash[admin] = ""

bd = BD()

user_keyboard = Keyboard(one_time=False).add(Text("-> üìå –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", {"profile": "local"})
                                 ).row().add(Text("-> ‚úè –û –∑–∞–Ω—è—Ç–∏—è—Ö", {"lessons": "local"})
                                 ).row().add(Text("-> üí≥ –û–ø–ª–∞—Ç–∏—Ç—å", {"payment": "local"})
                                 ).row().add(Text("-> ‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", {"question": "local"})
                                 ).get_json()

admin_keyboard = Keyboard(one_time=False).add(Text("-> –°–æ–∑–¥–∞—Ç—å —É—á–µ–Ω–∏–∫–∞", {"new_user": "local"})
                                  ).row().add(Text("-> –ò–∑–º–µ–Ω–∏—Ç—å —É—á–µ–Ω–∏–∫–∞", {"edit_user": "local"})
                                  ).row().add(Text("-> –£—á–µ–Ω–∏–∫–∏/Users", {"get_users": "local"})
                                  ).row().add(Text("-> –£—á–µ–Ω–∏–∫/User", {"get_user": "local"})
                                  ).row().add(Text("-> –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –æ–ø–ª–∞—Ç–µ", {"get_payment": "local"})
                                  ).row().add(Text("-> –ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –æ–ø–ª–∞—Ç–µ", {"edit_payment": "local"})
                                  ).get_json()

@bot.on.private_message(payload={"profile": "local"})
async def profile(msg: Message):
    #print("Profile " + msg.from_id)
    await msg.answer(bd.get_profile(msg.from_id), keyboard=user_keyboard)

@bot.on.private_message(payload={"lessons": "local"})
async def lessons(msg: Message):
    #print("Lessons " + msg.from_id)
    await msg.answer(bd.get_lesson(msg.from_id), keyboard=user_keyboard)


@bot.on.private_message(payload={"payment": "local"})
async def lessons(msg: Message):
    await msg.answer(bd.get_payment(), keyboard=user_keyboard)


@bot.on.private_message(payload={"question": "local"})
async def lessons(msg: Message):
    cash[msg.from_id] = "question"
    await msg.answer("–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å:", keyboard=user_keyboard)


@bot.on.private_message(payload={"get_payment": "local"})
async def lessons(msg: Message):
    await msg.answer(bd.get_payment(), keyboard=admin_keyboard)


@bot.on.private_message(payload={"edit_payment": "local"})
async def lessons(msg: Message):
    cash[msg.from_id] = "edit_payment"
    await msg.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª–∞—Ç–µ:", keyboard=admin_keyboard)


@bot.on.private_message(payload={"new_user": "local"})
async def lessons(msg: Message):
    cash[msg.from_id] = "new_user"
    await msg.answer("–í–≤–µ–¥–∏—Ç–µ VKid –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", keyboard=admin_keyboard)


@bot.on.private_message(payload={"get_user": "local"})
async def lessons(msg: Message):
    cash[msg.from_id] = "get_user"
    await msg.answer("–í–≤–µ–¥–∏—Ç–µ VKid –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", keyboard=admin_keyboard)


@bot.on.private_message(payload={"get_users": "local"})
async def lessons(msg: Message):
    await msg.answer(bd.get_users(), keyboard=admin_keyboard)


@bot.on.private_message(payload={"edit_user": "local"})
async def lessons(msg: Message):
    cash[msg.from_id] = "edit_user"
    await msg.answer("""–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Ñ–æ—Ä–º–∞—Ç–∞:
VKid —É—á–µ–Ω–∏–∫–∞
–ò–º—è —É—á–µ–Ω–∏–∫–∞
–í–æ–∑—Ä–∞—Å—Ç —É—á–µ–Ω–∏–∫–∞
–ö—É—Ä—Å —É—á–µ–Ω–∏–∫–∞
–£—Ä–æ–≤–µ–Ω—å –æ–±—É—á–µ–Ω–∏—è —É—á–µ–Ω–∏–∫–∞
–ü–æ–ª —É—á–µ–Ω–∏–∫–∞
–ò–º—è —Ä–æ–¥–∏—Ç–µ–ª—è
–ù–æ–º–µ—Ä —Ä–æ–¥–∏—Ç–µ–ª—è
–î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–µ""", keyboard=admin_keyboard)


@bot.on.private_message()
async def msg(msg: Message):
    if msg.from_id in ADMINS:
        if (msg.from_id not in cash) or cash[msg.from_id] == "":
            await msg.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é", keyboard=admin_keyboard)
        elif cash[msg.from_id] == "new_user":
            cash[msg.from_id] = ""
            await msg.answer(bd.new_user(msg.text), keyboard=admin_keyboard)
            return
        elif cash[msg.from_id] == "edit_user":
            cash[msg.from_id] = ""
            await msg.answer(bd.edit_user(msg.text), keyboard=admin_keyboard)
            return
        elif cash[msg.from_id] == "get_user":
            cash[msg.from_id] = ""
            await msg.answer(bd.get_user(msg.text), keyboard=admin_keyboard)
            return
        elif cash[msg.from_id] == "edit_payment":
            cash[msg.from_id] = ""
            await msg.answer(bd.edit_payment(msg.text), keyboard=admin_keyboard)
            return
    else:
        if (msg.from_id not in cash) or cash[msg.from_id] == "":
            await msg.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é", keyboard=user_keyboard)
        elif cash[msg.from_id] == "question":
            cash[msg.from_id] = ""
            await msg.answer("–í–æ–ø—Ä–æ—Å –∑–∞–¥–∞–Ω, –∂–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!", keyboard=user_keyboard)
            for id in ADMINS:
                await bot.api.messages.send(id, 0, message=f"@id{msg.from_id} –≤–æ–ø—Ä–æ—Å:\n{msg.text}")


bot.run_forever()